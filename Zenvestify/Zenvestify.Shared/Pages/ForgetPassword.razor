@page "/forgotpassword"
@rendermode InteractiveWebAssembly
@using Zenvestify.Shared.Layout
@layout NotLoggedInLayout
@inject HttpClient Http
@inject NavigationManager Nav

<EditForm Model="_fPass" OnValidSubmit="SubmitAsync">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="recover-container">
        <div class="card recover-card text-center p-4" style="max-width:520px;">

            <h3>Reset your password</h3>

            <p class="text-muted">Enter your email to get a reset link.</p>

            <div class="card p-4">

                <div class="mb-3">
                    <label class="form-label d-flex justify-content-start">Email</label>
                    <InputText type="email" class="form-control" @bind-Value="_fPass.Email" />
                    <ValidationMessage For="@(() => _fPass.Email)" />
                </div>

                <button type="submit" class="btn btn-primary w-100" disabled="@_busy">
                    @(_busy ? "Sending..." : "Send reset link")
                </button>

                @if(!string.IsNullOrWhiteSpace(_msg))
                {
                    <div class="alert alert-info mt-3">@_msg</div>
                }

                <div class="text-muted mt-3 text-center">
                    Go Back to <a href="/signup"
                                 class="link-dark text-decoration-underline"
                               @onclick='() => Nav.NavigateTo("/login", forceLoad: true)'>
                        login page
                    </a>
                 </div>
            </div>
        </div>
    </div>
</EditForm>

@code
{
    private readonly ForgetPasswordVm _fPass = new();
    private bool _busy;
    private string? _msg;

    private async Task SubmitAsync()
    {
        _busy = true;
        try
        {
            //TODO: POST to backend (adjust URL when API is ready)
            await Http.PostAsJsonAsync("api/auth/forgotpassword", _fPass);
            _msg = "If that email exists, a reset link has been sent.";
        }
        finally
        {
            _busy = false;
        }
    }

    public class ForgetPasswordVm
    {
        [System.ComponentModel.DataAnnotations.Required,
         System.ComponentModel.DataAnnotations.EmailAddress]
        public string Email { get; set; } = "";
    }

}
