@page "/"
@using Zenvestify.Shared.Layout
@layout NotLoggedInLayout
@inject NavigationManager Nav
@inject Zenvestify.Shared.Services.AuthService Auth

<section class="landing-hero bg-grid text-center py-5">
    <div class="container">
        <div class="container-sm">
            <h1 class="display-3 fw-bold hero-heading mb-0 topLevel">Simplify money</h1>
            <h1 class="display-3 fw-bold hero-heading mt-1 bottomLevel">Maximize savings</h1>
        </div>
       
        <p class="lead text-light-emphasis mb-4">
            Clarity, confidence, and control over your finances
        </p>
        @if (isLoggedIn)
        {
            <a href="/dashboard" class="btn btn-success btn-lg btn-brand btn-neon accent-ring"
               @onclick='() => Nav.NavigateTo("/dashboard", forceLoad: true)'
               @onclick:preventDefault="true">
                Go to dashboard
            </a>
        }
        else
        {
            <a href="/login" class="btn btn-primary btn-lg btn-brand btn-neon accent-ring"
               @onclick='() => Nav.NavigateTo("/login", forceLoad: true)'
               @onclick:preventDefault="true">
                Log in to start
            </a>
        }
        <div class="display-9 mt-3 signUpLink">
            New to Zenvestify?<a href="/signup"
                                 class="link-light text-decoration-underline"
                                 @onclick='() => Nav.NavigateTo("/signup", forceLoad: true)'
                                 @onclick:preventDefault>
                Sign up
            </a>
        </div>
    </div>
</section>


@code {
    private bool isLoggedIn;



    protected override async Task OnInitializedAsync()
    {
        var response = await Auth.GetMeAsync();
        isLoggedIn = !string.IsNullOrWhiteSpace(Auth.Token);

        Console.WriteLine($"[LandingPage] GET /api/auth/me -> Status={isLoggedIn}");
    }
}